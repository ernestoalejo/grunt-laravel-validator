<?php namespace Validators;
// AUTOGENERATED BY laravel-validator FROM test/fixtures/min_example.js, PLEASE, DON'T MODIFY IT

use App;
use Input;
use Log;
use Str;

class MinExample {

  public static function validate() {
    return self::validateData(Input::all());
  }

  public static function error($data, $msg) {
    $bt = debug_backtrace();
    $caller = array_shift($bt);
    Log::error($msg);
    Log::debug($caller['file'] . '::' . $caller['line']);
    Log::debug(var_export($data, TRUE));
    App::abort(403, 'validator error: ' . $msg);
  }

  public static function validateData($data) {
    $valid = array();
    $store = array();

    if (!is_array($data)) {
      self::error($data, 'root is not an array');
    }

    if (!isset($data['mystring'])) {
      $data['mystring'] = null;
    }

    $value = $data['mystring'];
    if (is_null($value)) {
      $value = '';
    }
    if (is_int($value) || is_float($value)) {
      $value = strval($value);
    }
    if (!is_string($value)) {
      self::error($data, 'key ' . 'mystring' . ' is not a string');
    }

    if (Str::length($value) === 0) {
      self::error($data, 'key ' . 'mystring' . ' breaks the required validation');
    }

    $valid['mystring'] = $value;

    return $valid;
  }

}
